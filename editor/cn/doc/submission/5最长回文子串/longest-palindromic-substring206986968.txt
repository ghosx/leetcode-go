func longestPalindrome(s string) string {
	if s == "" {
		return ""
	}
	start, end := 0, 0
	for i := 0; i < len(s); i++ {
		l1, r1 := expandCenter(s, i, i)
		l2, r2 := expandCenter(s, i, i+1)
		if r1-l1 > end-start {
			start, end = l1, r1
		}
		if r2-l2 > end-start {
			start, end = l2, r2
		}
	}
	return s[start:end+1]
}

func expandCenter(s string, left, right int) (int, int) {
	for left >= 0 && right < len(s) {
		if s[left] == s[right] {
			left, right = left-1, right+1
		}else{
			break
		}
	}
	return left+1, right-1
}


//runtime:4 ms
//memory:2.6 MB
